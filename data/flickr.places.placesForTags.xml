<?xml version="1.0" encoding="utf-8" ?>
<rsp stat="ok">
<method name="flickr.places.placesForTags" needslogin="0" needssigning="0" requiredperms="0">
	<description>Return a list of the top 100 unique places clustered by a given placetype for set of tags or machine tags. </description>
	<response>&lt;places total=&quot;1&quot;&gt;
   &lt;place place_id=&quot;kH8dLOubBZRvX_YZ&quot; woeid=&quot;2487956&quot;
               latitude=&quot;37.779&quot; longitude=&quot;-122.420&quot;
               place_url=&quot;/United+States/California/San+Francisco&quot;
               place_type=&quot;locality&quot;
               photo_count=&quot;156&quot;&gt;San Francisco, California&lt;/place&gt;
&lt;/place&gt;</response>
</method>
<arguments>
	<argument name="api_key" optional="0">Your API application key. &lt;a href=&quot;/services/api/misc.api_keys.html&quot;&gt;See here&lt;/a&gt; for more details.</argument>
	<argument name="place_type_id" optional="0">The numeric ID for a specific place type to cluster photos by. &lt;br /&gt;&lt;br /&gt;

Valid place type IDs are :

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;22&lt;/strong&gt;: neighbourhood&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;7&lt;/strong&gt;: locality&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;8&lt;/strong&gt;: region&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;12&lt;/strong&gt;: country&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;29&lt;/strong&gt;: continent&lt;/li&gt;
&lt;/ul&gt;</argument>
	<argument name="woe_id" optional="1">A Where on Earth identifier to use to filter photo clusters. For example all the photos clustered by &lt;strong&gt;locality&lt;/strong&gt; in the United States (WOE ID &lt;strong&gt;23424977&lt;/strong&gt;).
&lt;br /&gt;&lt;br /&gt;
&lt;span style=&quot;font-style:italic;&quot;&gt;(While optional, you must pass either a valid Places ID or a WOE ID.)&lt;/span&gt;</argument>
	<argument name="place_id" optional="1">A Flickr Places identifier to use to filter photo clusters. For example all the photos clustered by &lt;strong&gt;locality&lt;/strong&gt; in the United States (Place ID &lt;strong&gt;4KO02SibApitvSBieQ&lt;/strong&gt;).
&lt;br /&gt;&lt;br /&gt;
&lt;span style=&quot;font-style:italic;&quot;&gt;(While optional, you must pass either a valid Places ID or a WOE ID.)&lt;/span&gt;</argument>
	<argument name="threshold" optional="1">The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used.&lt;br /&gt;&lt;br /&gt;

For example if you only have &lt;strong&gt;3&lt;/strong&gt; photos taken in the locality of Montreal&lt;/strong&gt; (WOE ID 3534) but your threshold is set to &lt;strong&gt;5&lt;/strong&gt; then those photos will be &quot;rolled up&quot; and included instead with a place record for the region of Quebec (WOE ID 2344924).</argument>
	<argument name="tags" optional="1">A comma-delimited list of tags. Photos with one or more of the tags listed will be returned.</argument>
	<argument name="tag_mode" optional="1">Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.</argument>
	<argument name="machine_tags" optional="1">Aside from passing in a fully formed machine tag, there is a special syntax for searching on specific properties :

&lt;ul&gt;
  &lt;li&gt;Find photos using the 'dc' namespace :    &lt;code&gt;&quot;machine_tags&quot; =&gt; &quot;dc:&quot;&lt;/code&gt;&lt;/li&gt;

  &lt;li&gt; Find photos with a title in the 'dc' namespace : &lt;code&gt;&quot;machine_tags&quot; =&gt; &quot;dc:title=&quot;&lt;/code&gt;&lt;/li&gt;

  &lt;li&gt;Find photos titled &quot;mr. camera&quot; in the 'dc' namespace : &lt;code&gt;&quot;machine_tags&quot; =&gt; &quot;dc:title=\&quot;mr. camera\&quot;&lt;/code&gt;&lt;/li&gt;

  &lt;li&gt;Find photos whose value is &quot;mr. camera&quot; : &lt;code&gt;&quot;machine_tags&quot; =&gt; &quot;*:*=\&quot;mr. camera\&quot;&quot;&lt;/code&gt;&lt;/li&gt;

  &lt;li&gt;Find photos that have a title, in any namespace : &lt;code&gt;&quot;machine_tags&quot; =&gt; &quot;*:title=&quot;&lt;/code&gt;&lt;/li&gt;

  &lt;li&gt;Find photos that have a title, in any namespace, whose value is &quot;mr. camera&quot; : &lt;code&gt;&quot;machine_tags&quot; =&gt; &quot;*:title=\&quot;mr. camera\&quot;&quot;&lt;/code&gt;&lt;/li&gt;

  &lt;li&gt;Find photos, in the 'dc' namespace whose value is &quot;mr. camera&quot; : &lt;code&gt;&quot;machine_tags&quot; =&gt; &quot;dc:*=\&quot;mr. camera\&quot;&quot;&lt;/code&gt;&lt;/li&gt;

 &lt;/ul&gt;

Multiple machine tags may be queried by passing a comma-separated list. The number of machine tags you can pass in a single query depends on the tag mode (AND or OR) that you are querying with. &quot;AND&quot; queries are limited to (16) machine tags. &quot;OR&quot; queries are limited
to (8).</argument>
	<argument name="machine_tag_mode" optional="1">Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.</argument>
	<argument name="min_upload_date" optional="1">Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp.</argument>
	<argument name="max_upload_date" optional="1">Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.</argument>
	<argument name="min_taken_date" optional="1">Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime.</argument>
	<argument name="max_taken_date" optional="1">Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime.</argument>
</arguments>
<errors>
	<error code="1" message="Not a valid date.">The date argument passed was incorrect.</error>
	<error code="100" message="Invalid API Key">The API key passed was not valid or has expired.</error>
	<error code="105" message="Service currently unavailable">The requested service is temporarily unavailable.</error>
	<error code="111" message="Format &quot;xxx&quot; not found">The requested response format was not found.</error>
	<error code="112" message="Method &quot;xxx&quot; not found">The requested method was not found.</error>
	<error code="114" message="Invalid SOAP envelope">The SOAP envelope send in the request could not be parsed.</error>
	<error code="115" message="Invalid XML-RPC Method Call">The XML-RPC request document could not be parsed.</error>
	<error code="116" message="Bad URL found">One or more arguments contained a URL that has been used for abuse on Flickr.</error>
</errors>
</rsp>
